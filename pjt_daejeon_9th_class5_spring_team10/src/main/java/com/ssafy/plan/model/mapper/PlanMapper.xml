<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.plan.model.mapper.PlanMapper">

	<resultMap type="PlanDto" id="plans">
		<result column="plan_id" property="planId" />
		<!-- <result column="u_id" property="userId"/> -->
		<result column="user_name" property="userName" />
		<result column="plan_title" property="planTitle" />
		<result column="plan_content" property="planContent" />
		<result column="plan_date" property="planDate" />
		<result column="likeCnt" property="likeCnt" />
	</resultMap>
	<resultMap type="PlanDetailDto" id="planDetail">
		<result column="pd_id" property="planDetailId" />
		<result column="attr_id" property="attractionId" />
		<result column="rest_id" property="restAreaId" />
		<result column="order" property="planOrder" />
	</resultMap>

	<!-- 전체 플랜게시 읽어오기 -->
	<select id="listPlan" resultMap="plans">
		select plan_id,
		(select user_name
		from user_tb where user_id = pb.u_id) as user_name,
		plan_title,
		plan_content,
		case when date_format(plan_date, '%Y%m,%d') =
		date_format(now(), '%Y%m%d')
		then date_format(plan_date, '%H:%i:%s')
		else date_format(plan_date,
		'%y.%m.%d')
		end plan_date,
		ifnull(likeCnt,0) as likeCnt
		from plan_board_tb pb left outer join (
		select p_id,
		count(*) as likeCnt
		from plan_like_tb
		group by p_id) pl
		on pb.plan_id = pl.p_id
	</select>

	<!-- 플랜 게시글(plan_id)에 해당하는 여행지 리스트 불러오기 -->
	<select id="listAttraction" resultType="Map">
		SELECT ATTR_ID, P_ORDER
		FROM plan_detail_tb
		where p_id = #{planId}
	</select>


	<!-- 내 플랜 불러오기 -->
	<select id="listMyPlanBoard" resultMap="plans">
		select plan_id, (select
		user_name from user_tb where user_id = pb.u_id) as user_name,
		plan_title, plan_content,
		case when date_format(plan_date, '%Y%m,%d') =
		date_format(now(), '%Y%m%d')
		then date_format(plan_date, '%H:%i:%s')
		else date_format(plan_date, '%y.%m.%d')
		end plan_date,
		ifnull(likeCnt,0) as likeCnt
		from plan_board_tb pb left outer join (
		select p_id,
		count(*) as likeCnt
		from plan_like_tb
		group by p_id) pl
		on pb.plan_id = pl.p_id
		where pb.u_id = #{userId}
	</select>

	<!-- 댓글 단 플랜 불러오기 -->
	<select id="listCommentedPlanBoard" resultMap="plans">
		select plan_id, 
		(select user_name from user_tb where user_id = pb.u_id) as user_name,
		 plan_title, plan_content, 
		 case when date_format(plan_date, '%Y%m,%d') = date_format(now(), '%Y%m%d')
		then date_format(plan_date, '%H:%i:%s')
		else date_format(plan_date, '%y.%m.%d')
		end plan_date, 
		 ifnull(likeCnt, 0) as likeCnt
		 from plan_board_tb pb left outer join (
		select p_id, count(*) as likeCnt
		from plan_like_tb
		group by p_id) pl
		on pb.plan_id = pl.p_id
		where pb.plan_id in (select p_id
		from plan_comment_tb 
		where u_id = #{userId});
	</select>

	<!-- 찜한 플랜 불러오기 -->
	<select id="listWishPlanBoard" resultMap="plans">
		select plan_id,
		(select
		user_name from user_tb where user_id = pb.u_id) as user_name,
		plan_title, plan_content,
		case when date_format(plan_date, '%Y%m,%d') =
		date_format(now(), '%Y%m%d')
		then date_format(plan_date, '%H:%i:%s')
		else date_format(plan_date, '%y.%m.%d')
		end plan_date,
		ifnull(likeCnt, 0) as likeCnt
		from plan_board_tb pb left outer join (
		select p_id,
		count(*) as likeCnt
		from plan_like_tb
		group by p_id) pl
		on pb.plan_id = pl.p_id
		where pb.plan_id in (select p_id
		from plan_like_tb
		where u_id = #{userId});
	</select>

	<!-- <select id="listMyPlan" result> </select> -->
	<!-- 플랜 게시판 아이템의 여행지 리스트 불러오기 -->

	<!-- 플랜게시판 글 쓰기 -->
	<insert id="writePlanBoard" parameterType="map">
		INSERT INTO PLAN_BOARD_TB (U_ID, PLAN_TITLE, PLAN_CONTENT, PLAN_DATE)
		VALUES (#{userId}, #{planTitle}, #{planContent}, NOW())
		<selectKey keyProperty="plan_id" resultType="String"
			order="AFTER">
			SELECT last_insert_id()
		</selectKey>
	</insert>

	<!-- plan_tb에 글을 누가 작성했는지 기록 -->
	<insert id="indexPlanBoardUser" parameterType="String">
		INSERT INTO
		PLAN_TB (USER_ID)
		VALUES (#{userId})
	</insert>

	<!-- 선택한 여행지 저장 -->
	<insert id="writePlans" parameterType="map">
		INSERT INTO PLAN_DETAIL_TB
		(P_ID, ATTR_ID, P_ORDER)
		VALUES (#{plan_id}, #{contentId}, #{pOrder})
	</insert>

	<!-- 상세플랜: 선택된 한 유저의 글, 댓글, 좋아요 수, 상세플랜(plan_tb) -->


	<select id="likedPlanIdList" parameterType="String">
		select p_id
		from plan_like_tb
		where u_id = #{userId};
	</select>


</mapper> 